

~/.rvm/gems/ruby-1.9.2-p290/gems/highline-1.6.9/test


Allow configuring git hook before and after any command, so that todo is synced with a repo somewhere.

Priorities: mark with number of !
Tags: mark with .tag (think css classes)

Use a css like stylesheet in config to choose colors

No difference between context and project

To edit a task, use ed. I don't want the screen context to be replaced with a full screen editor.

colors in shell
http://codesnippets.joyent.com/posts/show/1517

put a tag colorizer in a different program and exec it with ruby -n

  This reads the config and sees the colors each tag should be

Instead of writing wrappers around  ed commands, why not just forward them directly

  todo 3m4 
  todo 3d
  todo 3a [task text] # => appends a task after 3
  todo 3c [text] # => change task 3
  todo 3i [text] # => insert  a task before 3
  todo 3s/test/blah/
  todo ,n # => show numbered tasks

  todo a reply to customer X +project1
  todo a buy some carrots  @centralsq

  # to filter

  todo @cambridgeport # => lists all tasks @cambridgeport

etc.

Filters and tags

  Filters are implemented by piping cat -n todolistfile to 
    - a special ruby -n program that colorizes
    - sed to filter by context and project
    - something to sort by priority
    - just a straight grep or sed filter
  Tags
    - no special syntax? you just come up with your own
    - but start with +project @context
    - colorized if in config
    - same with priority. priority is just a another tag 
      - !!! is not special, but defined 
      http://code.dunae.ca/css_parser/
    - colorizing syntax shouldn't be css, but just /regex/ COLOR

  Sort order 
    - do we really need sort order? no. user can just reorder by ed commands
    - things like !!! should only be used for colorization

Done tasks

  Come up with a tool later. Don't need a done.txt file. Just a program that compiles a list of done tasks from git repo.

Git:
  
  git init
  git push
  git pull
  git remote add origin etc.

  just use standard git hooks in .git/config directly



